plugins {
    id 'net.minecraftforge.gradle' version '5.1.+'
}

group = 'fossilsarcheology'
version = '8.0.6'

java {
    archivesBaseName = 'fossilsarcheology'
    toolchain.languageVersion = JavaLanguageVersion.of(8)
}

minecraft {
    // The mappings can be changed at any time and must be in the following format.
    // Channel:   Version:
    // official   MCVersion             Official field/method names from Mojang mapping files
    // parchment  YYYY.MM.DD-MCVersion  Open community-sourced parameter names and javadocs layered on top of official
    //
    // You must be aware of the Mojang license when using the 'official' or 'parchment' mappings.
    // See more information here: https://github.com/MinecraftForge/MCPConfig/blob/master/Mojang.md
    //
    // Parchment is an unofficial project maintained by ParchmentMC, separate from MinecraftForge
    // Additional setup is needed to use their mappings: https://github.com/ParchmentMC/Parchment/wiki/Getting-Started
    //
    // Use non-default mappings at your own risk. They may not always work.
    // Simply re-run your setup task after changing the mappings to update your workspace.
    mappings channel: 'stable', version: '39-1.12'

    accessTransformer = file('src/main/resources/META-INF/fossil_at.cfg')

    // Default run configurations.
    // These can be tweaked, removed, or duplicated as needed.
    runs {
        client {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            // The markers can be added/remove as needed separated by commas.
            // "SCAN": For mods scan.
            // "REGISTRIES": For firing of registry events.
            // "REGISTRYDUMP": For getting the contents of all registries.
            property 'forge.logging.markers', 'REGISTRIES'


            // Recommended logging level for the console
            // You can set various levels here.
            // Please read: https://stackoverflow.com/questions/2031163/when-to-use-the-different-log-levels
            property 'forge.logging.console.level', 'debug'


            mods {
                fossilsarcheology {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'


            mods {
                fossilsarcheology {
                    source sourceSets.main
                }
            }
        }
    }
}

// Include resources generated by data generators.
sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    mavenCentral()
    jcenter()
    maven {
        name = 'llibrary'
        url = 'https://maven.mcmoddev.com/'
    }

    maven { // COFH Mods
        url = "https://maven.covers1624.net"
    }

    maven {
        url = 'https://maven.blamejared.com'
        name = 'BlameJared Maven'
    }

    maven {
        name = "JEI"
        url = "https://dvs1.progwml6.com/files/maven"
    }

    maven {
        url = "https://maven.mcmoddev.com"
    }

    maven {
        url = "https://repo1.maven.org/maven2/org/slf4j/"
    }

    maven {
        url = "https://www.jabylon.org/maven"
    }

    flatDir {
    dir 'libs'
    }
}

dependencies {
    // Specify the version of Minecraft to use. If this is any group other than 'net.minecraft' it is assumed
    // that the dep is a ForgeGradle 'patcher' dependency, and its patches will be applied.
    // The userdev artifact is a special name and will get all sorts of transformations applied to it.
    minecraft 'net.minecraftforge:forge:1.12.2-14.23.5.2859'
    compileOnly "net.ilexiconn:llibrary:1.7.19-1.12.2"
    compileOnly "slimeknights.mantle:Mantle:1.12-1.3.1.21"
    compileOnly "slimeknights:TConstruct:1.12.2-2.9.1.70"
    compileOnly "mezz.jei:jei_1.12.2:4.9.1.181:api"
    compileOnly "thaumcraft:Thaumcraft:1.12.2:6.1.BETA26"
    compileOnly "baubles:Baubles:1.12:1.5.2"
    compileOnly "CraftTweaker2:CraftTweaker2-MC1120-Main:1.12-4.1.6.465"
    compileOnly "cofh:RedstoneFlux:1.12-2.1.0.7:universal"
}

// Example for how to get properties into the manifest for reading at runtime.
jar {
    manifest {
        attributes([
                "Specification-Title"     : "fossilsarcheology",
                "Specification-Vendor": "fossilsarcheology authors",
                "Specification-Version"   : "1", // We are version 1 of ourselves
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : project.jar.archiveVersion,
                "Implementation-Vendor": "fossilsarcheology authors",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
                'FMLAT': 'fossil_at.cfg' // The name of the accesstransformer file
        ])
    }
}

jar.finalizedBy('reobfJar')

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8' // Use the UTF-8 charset for Java compilation
}
